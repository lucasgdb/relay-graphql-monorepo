version: "3.9"

services:
  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_USER=example_user
      - POSTGRES_DB=example_database
      - POSTGRES_PASSWORD=example_password
    ports:
      - 5432:5432
    volumes:
      - example_database_data:/var/lib/postgresql/data
      - ./database/init-user-db.sql:/docker-entrypoint-initdb.d/init-user-db.sql
    healthcheck:
      test: '!</dev/tcp/db/5432'

  server:
    image: node:16.14.0-alpine3.14
    container_name: server
    working_dir: /relay-graphql-monorepo/packages/server
    volumes:
      - $PWD:/relay-graphql-monorepo
    entrypoint: yarn start:dev
    ports:
      - 8080:8080
      - 9229:9229 # enable nodejs devtools debugger
    healthcheck:
      test: 'node hc.mjs'
      timeout: 3s
    depends_on:
      database:
        condition: service_healthy

  web:
    image: node:16.14.0-alpine3.14
    container_name: web
    working_dir: /relay-graphql-monorepo/packages/web
    volumes:
      - $PWD:/relay-graphql-monorepo
    entrypoint: yarn start:dev
    ports:
      - 8081:8081
    depends_on:
      server:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
    ports:
      - 80:80
    environment:
      - NGINX_PORT=80
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.conf > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      server:
        condition: service_healthy

volumes:
  example_database_data:
